version: '3'

services:
  nats-server:
    image: nats:latest
    ports:
      - "8222:8222"

  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222


#======================================================
# NOTIFICATIONS LOCAL
#=======================================================
  # notifications-ms:
  #   build: ./notifications-microservice
  #   volumes:
  #     - ./notifications-microservice/src:/usr/src/app/src
  #   command: npm run start:dev
  #   environment:
  #     - PORT=3012
  #     - NATS_SERVERS=nats://nats-server:4222
  #     - DATABASE_URL=${DATABASE_URL_NOTIFICATIONS}
  #   depends_on:
  #     notifications-db:
  #       condition: service_healthy 

  # notifications-db:
  #   container_name: notifications_ms_db
  #   image: postgres:16.2
  #   restart: always
  #   volumes:
  #     - ./postgres:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=123456
  #     - POSTGRES_DB=notifications-database
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 5s
  #     timeout: 15s
  #     retries: 10
#======================================================
# STORES LOCAL
#=======================================================
  store-ms:
    build: ./stores-microservice
    volumes:
      - ./stores-microservice/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3011
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=${DATABASE_URL_STORES}
    depends_on:
      stores-db:
        condition: service_healthy 

  stores-db:
    container_name: stores_ms_db
    image: postgres:16.2
    restart: always
    volumes:
      - ./postgres/stores:/var/lib/postgresql/data
    ports:
      - 5431:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=stores-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 15s
      retries: 10
#======================================================
# PRODUCTS LOCAL
#=======================================================
  productss-ms:
    build: ./productss-microservice
    volumes:
      - ./productss-microservice/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3010
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=${DATABASE_URL_PRODUCTSS}
    depends_on:
      products-db:
        condition: service_healthy 

  products-db:
    container_name: products_db
    image: postgres:16.2
    restart: always
    volumes:
      - ./postgres/products:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=products-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 15s
      retries: 10
#======================================================
# ORDENES LOCAL
#=======================================================
  orders-ms:
    build: ./orders-microservice
    volumes:
      - ./orders-microservice/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - DATABASE_URL=${DATABASE_URL_POSTGRES}
      - NATS_SERVERS=nats://nats-server:4222
    depends_on:
      orders-db:
        condition: service_healthy  

  orders-db:
    container_name: orderdb
    image: postgres:16.2
    restart: always
    volumes:
      - ./postgres/orders:/var/lib/postgresql/data
    ports:
      - 5430:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=ketchup1234
      - POSTGRES_DB=orderdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 10
#======================================================
# PAYMENTS LOCAL
#=======================================================
  payment-ms:
    build: ./payments-microservice
    ports:
      - ${PAYMENT_MS_PORT}:${PAYMENT_MS_PORT}
    volumes:
      - ./payments-microservice/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PAYMENT_MS_PORT}
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}
      - NATS_SERVERS=nats://nats-server:4222
  
  auth-ms:
    build: ./auth-microservice
    volumes:
      - ./auth-microservice/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3004
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=${AUTH_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}


      
#======================================================
# FRONT-END
#=======================================================
  front-end:
    build: 
     context: ./front-end/app
     dockerfile: dockerfile
    volumes:
      - ./front-end/app/src:/usr/src/app/src
    ports:
      - 4000:4000
    command: npm run dev
    environment:
      - PORT=4000
      - BACKEND_URL=${BACKEND_URL_TO_FRONT_END}
